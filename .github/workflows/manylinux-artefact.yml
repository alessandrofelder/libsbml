name: Test Manylinux build

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name:
      ${{ matrix.platform }}, Parser option ${{ matrix.xml_parser_option }},
      with namespaces ${{ matrix.with_namespace}}, strict includes ${{
      matrix.strict }}, with examples ${{ matrix.with_examples}}, package option
      ${{ matrix.package_option}}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        xml_parser_option: ["-DWITH_LIBXML"]
        with_namespace: ["True"]
        strict: ["True"]
        with_examples: ["True"]
        package_option: ["-DWITH_STABLE_PACKAGES=ON"]
        cpp_standard: [98]
        language_bindings: ["-DWITH_JAVA=True"]
    runs-on: ${{ matrix.platform }}
    container: quay.io/pypa/manylinux2010_x86_64

    steps:
      - name: install Swig 4 from source
        run: |
          yum install -y pcre-devel
          echo "SWIG_DIR=/usr/local/swig/" >> "${GITHUB_ENV}"
          curl -L https://sourceforge.net/projects/swig/files/swig/swig-4.0.2/swig-4.0.2.tar.gz/download > swig.tar.gz
          tar -zxvf swig.tar.gz
          cd swig-4.0.2/
          ./configure --disable-dependency-tracking --prefix=$SWIG_DIR
          make clean
          make -j 2
          make install
          swig -version

      - name: install CMake using pip
        run: |
          /opt/python/cp38-cp38/bin/pip install cmake
          ln -s /opt/python/cp38-cp38/bin/cmake /usr/bin/cmake
          cmake --version
          ln -s /opt/python/cp38-cp38/bin/ctest /usr/bin/ctest
          ctest --version

      - name: What OS is running
        run: |
          uname -a
          git --version
          git clone https://github.com/alessandrofelder/libsbml.git
          yum install -y libxml2-devel check-devel java-devel
          swig -version
          cmake --version
          mkdir build
          cd build
          mkdir ../install
          cmake ../libsbml \
          -DCMAKE_INSTALL_PREFIX=../install \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DCMAKE_CXX_STANDARD=${{matrix.cpp_standard}} \
          -DWITH_CHECK=True \
          -DWITH_CPP_NAMESPACE=${{matrix.with_namespace}} \
          -DLIBSBML_USE_STRICT_INCLUDES=${{matrix.strict}} \
          -DWITH_EXAMPLES=${{matrix.with_examples}} \
          ${{matrix.package_option}} \
          ${{matrix.language_bindings}} \
          -DWITH_STATIC_RUNTIME=ON \
          -DPYTHON_USE_DYNAMIC_LOOKUP=ON
          cmake --build . --config $BUILD_TYPE

      - name: Test
        run: |
          cd build
          ctest -V -C $BUILD_TYPE

      ### create binaries ###
      - name: Install
        run: |
          cd build
          cmake --install . --config $BUILD_TYPE

      ### setup artifact environment ###
      - name: Store libSBML version in environment
        run: |
          cd libsbml
          echo  "LIBSBML_VERSION=$( cat VERSION.txt)"  >> "${GITHUB_ENV}"

      - name: Set artifact name suffix to stable packages
        if: matrix.package_option=='-DWITH_STABLE_PACKAGES=ON'
        run: |
          echo "ARTIFACT_NAME_SUFFIX=stable-packages" >> "${GITHUB_ENV}"

      - name: Set artifact name suffix to all packages
        if: matrix.package_option=='-DWITH_ALL_PACKAGES=ON'
        run: |
          echo "ARTIFACT_NAME_SUFFIX=all-packages" >> "${GITHUB_ENV}"

      - name: Upload Manylinux2010 binary archive
        uses: actions/upload-artifact@v1
        with:
          name:
            Manylinux2010 nightly (zip, libSBML ${{env.LIBSBML_VERSION}},
            ${{env.ARTIFACT_NAME_SUFFIX}})
          path: ${{runner.workspace}}/install/*
          retention-days: 1
          if-no-files-found: error
